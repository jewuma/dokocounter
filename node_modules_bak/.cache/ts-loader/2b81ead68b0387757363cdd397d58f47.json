{"remainingRequest":"Z:\\dokovue\\node_modules\\babel-loader\\lib\\index.js!Z:\\dokovue\\node_modules\\ts-loader\\index.js??ref--15-2!Z:\\dokovue\\node_modules\\eslint-loader\\index.js??ref--14-0!Z:\\dokovue\\src\\backend.ts","dependencies":[{"path":"Z:\\dokovue\\src\\backend.ts","mtime":1642867926721},{"path":"Z:\\dokovue\\babel.config.js","mtime":1639842632362},{"path":"Z:\\dokovue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639842481421},{"path":"Z:\\dokovue\\node_modules\\babel-loader\\lib\\index.js","mtime":1639842509641},{"path":"Z:\\dokovue\\node_modules\\ts-loader\\index.js","mtime":1639842516501},{"path":"Z:\\dokovue\\node_modules\\eslint-loader\\index.js","mtime":1639842489139}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Z:\\dokovue\\node_modules\\eslint-loader\\index.js??ref--14-0!Z:\\dokovue\\src\\backend.ts"],"names":[],"mappings":"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","sourcesContent":["export interface player {\n  id: number;\n  name: string;\n  surname: string;\n  active: boolean;\n}\nexport interface Statistic {\n  gamesplayed: number,\n  gamesre: number,\n  gameskontra: number,\n  gameswon: number,\n  gamessolo: number,\n  solowon: number,\n  totalpoints: number\n  averagepoints: number\n}\nexport interface Game {\n  gameId: number,\n  playerId: number,\n  points: number\n}\nexport class backend {\n  private host = \"http://192.168.178.105/doko2/\" as string\n  public async newPlayer(player: player): Promise<player> {\n    const res = await fetch(this.host + \"api/players.php\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(player),\n    });\n    const data = await res.json();\n    return data;\n  }\n  async deletePlayer(id: number): Promise<boolean> {\n    const res = await fetch(this.host + `api/players.php/${id}`, {\n      method: \"DELETE\",\n    });\n    return res.status === 200;\n  }\n  async setPLayerActive(id: number, active: boolean): Promise<player> {\n    const playerToToggle = await this.fetchPlayer(id);\n    playerToToggle.active = active;\n    const res = await fetch(this.host + `api/players.php/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(playerToToggle),\n    });\n    return await res.json();\n  }\n  async fetchPlayers(): Promise<player[]> {\n    const res = await fetch(this.host + \"api/players.php\");\n    const data = await res.json();\n    return data;\n  }\n  async fetchPlayer(id: number): Promise<player> {\n    const res = await fetch(this.host + `api/players.php/${id}`);\n    const data = await res.json();\n    return data;\n  }\n  async fetchStatistics(): Promise<Statistic[]> {\n    const res = await fetch(this.host + \"api/statistics.php\");\n    const data = await res.json();\n    return data;\n  }\n  async fetchActiveList(): Promise<Game[]> {\n    const res = await fetch(this.host + \"api/games.php\");\n    const data = await res.json();\n    return data;\n  }\n}"],"sourceRoot":""}]}